/*
 * This file is generated by jOOQ.
 */
package it.barusu.tutorial.jooq.generator.tables;


import it.barusu.tutorial.jooq.generator.HjParcel;
import it.barusu.tutorial.jooq.generator.Indexes;
import it.barusu.tutorial.jooq.generator.Keys;
import it.barusu.tutorial.jooq.generator.tables.records.PUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PUser extends TableImpl<PUserRecord> {

    private static final long serialVersionUID = -1451292442;

    /**
     * The reference instance of <code>hj_parcel.p_user</code>
     */
    public static final PUser P_USER = new PUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PUserRecord> getRecordType() {
        return PUserRecord.class;
    }

    /**
     * The column <code>hj_parcel.p_user.id</code>.
     */
    public final TableField<PUserRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>hj_parcel.p_user.login_name</code>.
     */
    public final TableField<PUserRecord, String> LOGIN_NAME = createField(DSL.name("login_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hj_parcel.p_user.user_name</code>.
     */
    public final TableField<PUserRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hj_parcel.p_user.version</code>.
     */
    public final TableField<PUserRecord, Long> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>hj_parcel.p_user.real_name</code>.
     */
    public final TableField<PUserRecord, String> REAL_NAME = createField(DSL.name("real_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>hj_parcel.p_user.age</code>.
     */
    public final TableField<PUserRecord, Long> AGE = createField(DSL.name("age"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>hj_parcel.p_user</code> table reference
     */
    public PUser() {
        this(DSL.name("p_user"), null);
    }

    /**
     * Create an aliased <code>hj_parcel.p_user</code> table reference
     */
    public PUser(String alias) {
        this(DSL.name(alias), P_USER);
    }

    /**
     * Create an aliased <code>hj_parcel.p_user</code> table reference
     */
    public PUser(Name alias) {
        this(alias, P_USER);
    }

    private PUser(Name alias, Table<PUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private PUser(Name alias, Table<PUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PUser(Table<O> child, ForeignKey<O, PUserRecord> key) {
        super(child, key, P_USER);
    }

    @Override
    public Schema getSchema() {
        return HjParcel.HJ_PARCEL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.P_USER_PRIMARY);
    }

    @Override
    public Identity<PUserRecord, Long> getIdentity() {
        return Keys.IDENTITY_P_USER;
    }

    @Override
    public UniqueKey<PUserRecord> getPrimaryKey() {
        return Keys.KEY_P_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<PUserRecord>> getKeys() {
        return Arrays.<UniqueKey<PUserRecord>>asList(Keys.KEY_P_USER_PRIMARY);
    }

    @Override
    public PUser as(String alias) {
        return new PUser(DSL.name(alias), this);
    }

    @Override
    public PUser as(Name alias) {
        return new PUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PUser rename(String name) {
        return new PUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PUser rename(Name name) {
        return new PUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Long, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
