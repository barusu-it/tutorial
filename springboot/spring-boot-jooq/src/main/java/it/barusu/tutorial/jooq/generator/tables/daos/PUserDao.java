/*
 * This file is generated by jOOQ.
 */
package it.barusu.tutorial.jooq.generator.tables.daos;


import it.barusu.tutorial.jooq.generator.tables.PUser;
import it.barusu.tutorial.jooq.generator.tables.records.PUserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PUserDao extends DAOImpl<PUserRecord, it.barusu.tutorial.jooq.generator.tables.pojos.PUser, Long> {

    /**
     * Create a new PUserDao without any configuration
     */
    public PUserDao() {
        super(PUser.P_USER, it.barusu.tutorial.jooq.generator.tables.pojos.PUser.class);
    }

    /**
     * Create a new PUserDao with an attached configuration
     */
    public PUserDao(Configuration configuration) {
        super(PUser.P_USER, it.barusu.tutorial.jooq.generator.tables.pojos.PUser.class, configuration);
    }

    @Override
    public Long getId(it.barusu.tutorial.jooq.generator.tables.pojos.PUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PUser.P_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchById(Long... values) {
        return fetch(PUser.P_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public it.barusu.tutorial.jooq.generator.tables.pojos.PUser fetchOneById(Long value) {
        return fetchOne(PUser.P_USER.ID, value);
    }

    /**
     * Fetch records that have <code>login_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfLoginName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PUser.P_USER.LOGIN_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>login_name IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchByLoginName(String... values) {
        return fetch(PUser.P_USER.LOGIN_NAME, values);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PUser.P_USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchByUserName(String... values) {
        return fetch(PUser.P_USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfVersion(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PUser.P_USER.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchByVersion(Long... values) {
        return fetch(PUser.P_USER.VERSION, values);
    }

    /**
     * Fetch records that have <code>real_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfRealName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PUser.P_USER.REAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>real_name IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchByRealName(String... values) {
        return fetch(PUser.P_USER.REAL_NAME, values);
    }

    /**
     * Fetch records that have <code>age BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchRangeOfAge(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PUser.P_USER.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<it.barusu.tutorial.jooq.generator.tables.pojos.PUser> fetchByAge(Long... values) {
        return fetch(PUser.P_USER.AGE, values);
    }
}
